//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsClient.MessageService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageService.IMessageService")]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IMessageService/GetMessage", ReplyAction="http://tempuri.org/IMessageService/GetMessageResponse")]
        string GetMessage(string name);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IMessageService/GetMessage", ReplyAction="http://tempuri.org/IMessageService/GetMessageResponse")]
        System.Threading.Tasks.Task<string> GetMessageAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IMessageService/GetMessageWithoutAnyProtection", ReplyAction="http://tempuri.org/IMessageService/GetMessageWithoutAnyProtectionResponse")]
        string GetMessageWithoutAnyProtection();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IMessageService/GetMessageWithoutAnyProtection", ReplyAction="http://tempuri.org/IMessageService/GetMessageWithoutAnyProtectionResponse")]
        System.Threading.Tasks.Task<string> GetMessageWithoutAnyProtectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IMessageService/GetSignedMessage", ReplyAction="http://tempuri.org/IMessageService/GetSignedMessageResponse")]
        string GetSignedMessage();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IMessageService/GetSignedMessage", ReplyAction="http://tempuri.org/IMessageService/GetSignedMessageResponse")]
        System.Threading.Tasks.Task<string> GetSignedMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IMessageService/GetSignedAndEncryptedMessage", ReplyAction="http://tempuri.org/IMessageService/GetSignedAndEncryptedMessageResponse")]
        string GetSignedAndEncryptedMessage();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IMessageService/GetSignedAndEncryptedMessage", ReplyAction="http://tempuri.org/IMessageService/GetSignedAndEncryptedMessageResponse")]
        System.Threading.Tasks.Task<string> GetSignedAndEncryptedMessageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : WindowsClient.MessageService.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.ClientBase<WindowsClient.MessageService.IMessageService>, WindowsClient.MessageService.IMessageService {
        
        public MessageServiceClient() {
        }
        
        public MessageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMessage(string name) {
            return base.Channel.GetMessage(name);
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync(string name) {
            return base.Channel.GetMessageAsync(name);
        }
        
        public string GetMessageWithoutAnyProtection() {
            return base.Channel.GetMessageWithoutAnyProtection();
        }
        
        public System.Threading.Tasks.Task<string> GetMessageWithoutAnyProtectionAsync() {
            return base.Channel.GetMessageWithoutAnyProtectionAsync();
        }
        
        public string GetSignedMessage() {
            return base.Channel.GetSignedMessage();
        }
        
        public System.Threading.Tasks.Task<string> GetSignedMessageAsync() {
            return base.Channel.GetSignedMessageAsync();
        }
        
        public string GetSignedAndEncryptedMessage() {
            return base.Channel.GetSignedAndEncryptedMessage();
        }
        
        public System.Threading.Tasks.Task<string> GetSignedAndEncryptedMessageAsync() {
            return base.Channel.GetSignedAndEncryptedMessageAsync();
        }
    }
}
